#!/usr/bin/env bash

set -euo pipefail

function main() {
    case $1 in
        all)
            install_common
            install_fish
            install_vscode
            install_python
            install_rust
            install_haskell
            install_nvim
            install_apps
            ;;
        apps)
            install_apps
            ;;
        vscode)
            install_vscode
            ;;
        common)
            install_common
            ;;
        haskell)
            install_haskell
            ;;
        fish)
            install_fish
            ;;
        nvim)
            install_nvim
            ;;
        python)
            install_python
            ;;
        rust)
            install_rust
            ;;
        *)
            echo "unknown target to install"
            exit 1
            ;;
    esac

    echo "Done"
}

function install_common() {
    echo "Installing common utilities..."
    sudo apt update
    sudo apt install -y autojump build-essential curl direnv git shellcheck

    sudo snap install ripgrep
    sudo snap alias ripgrep.rg rg

    ln -s "$(pwd)/gitconfig" ~/.gitconfig || true
}

function install_fish() {
    echo "Installing and configuring the fish shell..."

    sudo apt install fish

    chsh -s /usr/bin/fish

    mkdir -p ~/.config/fish
    ln -s "$(pwd)/fish/config.fish" ~/.config/fish/config.fish || true

    curl -L http://get.oh-my.fish > /tmp/omf.fish
    chmod +x /tmp/omf.fish
    /tmp/omf.fish --noninteractive

    fish -c "omf install fisk"
    fish -c "omf theme fisk"

    echo "You should logout to have the fish shell as the default"
}

function install_python() {
    echo "Installing python3..."

    sudo apt install -y python3 python3-pip ipython3

    pip3 install --user pipenv

    mkdir -p ~/.ipython/profile_default/startup
    ln -s "$(pwd)/ipython/profile_default/startup/00-autoreload.ipy" ~/ipython/profile_default/startup/00-autoreload.ipy || true
}

function install_rust() {
    echo "Installing rust..."

    curl https://sh.rustup.rs -sSf | sh
    rustup update
    rustup install nightly
    rustup component add rustfmt-preview clippy-preview
}

function install_haskell() {
    # TODO: actually install haskell
    echo "Installing haskell..."

    ln -s "$(pwd)/ghci.conf" ~/.ghci
}

function install_vscode() {
    echo "Installing VSCode..."

    sudo snap install vscode --classic

    vscode \
        --install-extension bungcip.better-toml \
        --install-extension lunaryorn.fish-ide \
        --install-extension ms-python.python \
        --install-extension rust-lang.rust \
        --install-extension stkb.rewrap \
        --install-extension timonwong.shellcheck

    mkdir -p ~/.config/Code/User
    ln -s "$(pwd)/code/keybindings.json" ~/.config/Code/User/keybindings.json || true
    ln -s "$(pwd)/code/settings.json" ~/.config/Code/User/settings.json || true

}

function install_nvim() {
    echo "Installing NeoVim..."

    sudo apt install -y neovim python3-neovim

    DEIN_DIR="$HOME/.dein"

    curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > /tmp/install_dein.sh
    sh /tmp/install_dein.sh "$DEIN_DIR"

    mkdir -p "$HOME/.config/nvim"
    ln -f -s "$(realpath init.vim)" "$HOME/.config/nvim"

    nvim -c 'call dein#install() | exit'
    nvim -c ':CheckHealth'
}

function install_apps() {
    echo "Installing miscellaneous apps..."

    sudo snap install slack --classic
    sudo snap install bitwarden spotify
}

if [ $# -eq 0 ]
    then
    echo "Please provide a target to install, use all to install everything"
    exit 1
fi

main "$1"
